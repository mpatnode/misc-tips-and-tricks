<?php

$g = [
        [ 15, -1, 9, 17, 10, 16, 28, 25, 29, 23, 10, 11, 17, 4, 7, 5, 13, 30, 15, 16, 30, 26, 21, 18, 30, 9, 7, 6, 24, 4, 25, 23, 21, 17, 10, 20, 16, 30, 27, 3, 30, 3, 18, 0, 20, 30, 28, 10, 29, 8 ],
        [ 2, 13, 11, 9, 18, 17, 25, 27, 13, 29, 15, 25, 13, 7, 26, 25, 1, -1, 28, -1, 18, 10, 6, 1, 26, 1, 1, 22, 0, 29, 21, 6, 16, 9, 14, 2, 15, 7, 30, 15, 1, -1, 20, 6, 25, -1, 5, 0, 19, 4 ],
        [ 17, 29, 21, 0, 0, 1, 30, 12, 24, 18, 7, 11, 29, 28, 21, 14, 13, 29, 5, 21, 10, 7, 19, 12, 20, 10, 6, 24, 11, 30, 29, 26, 3, 14, 4, 24, 18, 7, 26, 29, 3, 5, 9, 30, 26, 5, 4, 7, 21, 28 ],
        [ 7, 5, 3, 15, 16, 24, 11, 0, 4, 13, 9, 8, 27, 5, 30, 25, 1, 9, 27, 4, 10, 21, 9, 16, 6, 23, -1, 13, 0, 2, -1, 3, 3, 5, 20, 18, 20, 11, 15, 19, 13, 25, 23, 17, 17, 26, 1, 3, 9, 3 ],
        [ 9, 12, 19, 12, 2, 13, 24, 23, 3, 30, 25, 14, 7, 23, -1, 12, 4, 4, 25, 14, 12, -1, 29, 0, 7, 4, 22, 17, 30, -1, 18, 14, 5, 6, 25, 24, 25, 29, 8, 14, 19, 16, 3, 28, 29, 1, 14, 1, 23, 11 ],
        [ 20, 9, 16, 15, -1, 25, -1, 27, 15, 11, 11, 16, 4, 0, 10, 13, 30, 26, 25, 19, 8, 22, 3, -1, 2, 29, 13, 5, 24, 11, 5, 5, 30, 13, 22, 5, 5, 26, 5, 7, -1, 22, 30, 20, 20, 24, 11, 23, 30, 29 ],
        [ 20, 2, 22, 17, 5, 10, 14, 16, 4, 8, 15, 4, 13, 24, 29, 30, 12, 5, 16, 26, 19, 0, -1, 20, 25, 27, 30, 17, 13, 6, 21, 16, 25, 16, 7, 24, 19, 9, 22, 24, 30, 9, 30, 18, 24, 17, 25, 29, 14, 23 ],
        [ 17, 24, 8, 4, 8, 24, 12, 17, 19, 29, 22, 5, 11, 2, 13, 2, 14, 9, 20, 7, 9, 10, 3, 0, 26, 2, 26, 20, -1, 9, 24, 26, 26, 11, 2, 1, 18, 23, 10, 21, 29, 26, 11, 4, 21, 3, 6, 25, 28, -1 ],
        [ 27, -1, 20, 29, 13, 29, 21, 18, 27, 21, 15, 6, 12, 16, 26, 25, 24, 18, 3, 10, 8, 2, 22, 27, 3, 2, 23, 6, 11, 0, 5, 29, 16, 17, 21, 16, 28, 21, 5, 17, 30, 0, 9, 21, 1, 29, 27, 27, 4, 12 ],
        [ 27, 12, 25, 9, 3, 24, 26, 8, 6, 16, 10, 11, 22, 21, 28, 9, 9, -1, 8, 20, 0, 14, 17, 18, 24, 10, 18, 9, 19, 22, 11, 7, 24, 9, 21, 22, 0, 0, 8, 25, 12, 1, 27, 30, 15, 15, 13, 1, 9, 26 ],
        [ 8, 23, 11, 19, 2, 26, 4, 24, 13, 25, 5, 6, 24, 26, 28, 19, 19, 11, 29, 26, 25, 10, 11, 21, 28, 24, 24, 14, 2, 22, 29, 23, 3, 4, 27, 6, 22, 1, 26, 14, 16, 20, 15, 19, 13, 8, 9, 30, 25, 24 ],
        [ 28, 25, 24, 17, 23, 2, 1, 25, 24, 22, 26, 10, 8, 9, 25, 1, 18, 1, 18, 14, 20, 10, 29, 25, 5, -1, 12, 17, 1, 0, 22, -1, 8, 23, 12, 25, 21, 10, 23, 30, 17, -1, 22, 19, 28, 20, 22, 17, 2, 2 ],
        [ 7, 27, 26, 13, 2, 29, 28, 6, 11, 1, 4, 30, 3, 25, 23, 14, -1, 27, 30, 5, 10, 4, 0, 0, 1, 4, 17, 8, 11, 16, 21, 6, 1, 6, 23, 4, 28, 26, 22, 27, 7, 20, -1, 21, 8, 3, 28, 27, 20, 19 ],
        [ 2, 24, 15, 27, 2, 1, 30, 18, 16, 2, 26, 29, 0, 18, 3, 3, 16, 22, 5, 24, 2, 6, 6, 22, 28, 2, 28, 19, 23, 28, 12, 1, 25, 27, 16, 1, 21, 17, 20, 6, 22, 23, 24, 3, 11, 21, 1, 2, 21, 14 ],
        [ 5, 22, 23, 29, 2, 4, 26, 9, 11, 20, 27, 20, 9, 18, 15, 28, 17, 6, 10, 3, 9, 4, 26, 7, 13, 8, 20, 17, 11, 14, 8, 29, 2, 13, 29, 24, 26, 11, 30, 15, 20, 14, 18, 26, 28, 8, 25, 24, 4, 16 ],
        [ 14, 28, 1, 14, 12, 1, 29, 27, 20, 4, -1, 29, 14, 29, 26, 26, 5, 6, 3, 20, 25, 24, 21, 5, 1, 20, 0, 2, 3, -1, 22, 27, 4, 25, 8, 30, 14, 6, 24, 19, 29, 11, 6, -1, -1, 5, 11, 0, 5, 23 ],
        [ 27, 28, 24, 4, 4, 30, 13, 28, 9, 21, 6, 9, 27, 27, 19, 26, 6, 11, 13, 7, 12, 10, 25, 26, 21, 19, 3, 17, 14, 11, 13, 5, 0, 25, 19, 0, 12, 28, 17, 14, 15, 28, 15, 5, 0, 22, 11, 17, 28, 1 ],
        [ 24, 3, 29, 16, 22, 19, 13, 28, 30, 3, 3, 2, 2, 2, 29, 19, 20, 29, -1, 16, 25, 6, 9, 13, 16, 2, 15, 25, 11, 13, 22, 1, 6, 15, 23, 13, 6, -1, 20, 15, 14, 16, 24, -1, 16, 1, 8, -1, 30, 23 ],
        [ 24, 14, 1, 5, 20, 2, 27, 28, 10, 12, 14, 13, 6, 20, 20, 2, 11, 17, 25, 17, 13, 27, 7, 25, 28, 27, 26, 8, 16, 5, 19, 20, 1, 12, 19, 20, 27, 7, 6, 2, 29, 9, 19, 13, 0, 4, 8, 20, 22, 18 ],
        [ 26, -1, 11, 1, 10, -1, 9, 25, 7, 4, 10, 24, 0, 17, 12, 8, 19, 26, 20, 27, 14, 21, 27, 23, 8, 26, 9, 21, 8, 27, 4, 27, 0, 21, 3, 18, 19, 4, 3, 7, 2, 6, 14, 2, 26, 10, 23, 19, 28, 14 ],
        [ 14, 7, 15, 28, 20, 27, 0, 17, 13, 9, 13, 26, 7, 4, 26, 4, 9, 4, 25, 16, 24, 23, 29, 7, 10, 12, 21, 3, 11, 20, 27, 24, 6, 14, 21, 11, 29, 17, 7, 11, 6, 11, 22, 28, 26, 9, 21, 20, 0, 7 ],
        [ 3, 1, 13, 21, 26, 14, 21, 5, 11, 25, 12, 28, 0, 7, 18, 30, 4, 7, 18, 23, 5, 6, 13, 17, 5, 3, 18, 15, 17, 6, 7, 5, 0, 9, 17, 19, 18, 17, 5, 20, 5, 8, 5, 16, 28, 25, 19, 13, 13, 4 ],
        [ 1, 25, 9, 26, 24, 10, 15, 0, 5, 6, 6, 30, 17, 8, 28, 20, 20, 8, 30, 18, 24, 21, 1, 2, 9, 25, 21, -1, 11, 30, 12, 10, 25, 5, 13, -1, 27, 8, 18, 28, 28, 13, 3, 15, 6, 14, 0, -1, 22, 8 ],
        [ 0, 10, 29, 4, 3, 20, 24, 9, 7, 18, 9, 30, 9, 3, 30, 5, 13, 21, 23, 28, 27, 15, 9, 14, 8, 1, 24, 24, -1, 24, 1, 14, 15, 11, 19, 11, 19, 18, 27, 9, 24, 24, 6, 2, 21, 19, 24, 7, 15, 18 ],
        [ 8, 26, 15, 19, 3, 15, 15, 20, 14, 6, -1, 3, 6, 12, 5, 2, 11, 8, 15, 18, 25, 29, 16, 29, 22, 7, 6, 19, 7, 26, 27, 22, 21, 27, 16, 23, 1, 4, 17, 2, 3, 22, 25, 14, 24, 7, 7, 15, 22, 27 ],
        [ 21, 19, 3, 13, 5, 24, 20, 20, 24, 20, 21, 14, 4, 29, 14, 8, 2, 8, 14, 24, 5, 14, 4, 11, 15, 4, 28, 20, 23, 15, 5, 7, 17, 26, 11, 29, 20, 18, 29, -1, 24, 9, 3, 14, 5, 8, 28, 24, 28, 8 ],
        [ 12, 3, 9, 16, 18, 4, 11, 10, 9, 24, 10, 7, 9, 11, 27, 16, 13, 27, 2, 8, 30, 23, 6, 11, 16, 21, 3, 1, 22, 3, 16, 19, 17, 16, 27, 7, 25, 5, 23, 27, 23, 21, 12, 12, 9, 11, 2, 27, 30, 3 ],
        [ 27, 25, 26, 19, -1, 9, 2, 0, 12, 18, 29, 12, 9, 0, 8, 5, 26, 7, 12, 0, 1, 29, 8, 28, 23, 12, 30, 6, 24, 5, 20, 16, 17, 14, 2, 23, 24, 2, 27, 27, 25, 20, 22, 4, 25, 9, 13, 18, 28, -1 ],
        [ 5, 16, 5, 17, 0, 19, 8, 18, 18, 3, 11, 2, 7, 12, 1, 6, 9, 30, 7, 16, 22, 24, 8, 22, 12, 7, 15, 23, 6, 29, 13, 3, 24, 29, 6, 23, 6, 0, 4, 24, 22, 4, 14, 16, 18, 7, 7, 29, 13, 24 ],
        [ 3, 10, 13, 30, 18, 4, 27, 7, 30, 8, 22, 20, 2, 15, 4, 10, 22, 2, 18, 28, 4, 12, 15, 7, 20, 29, 0, 2, 25, 22, 4, 19, 14, 22, 22, 28, 10, 2, 29, 22, 28, 14, 2, 22, 18, 7, 8, 11, 28, 11 ],
        [ 0, 21, 5, 23, 1, 3, 26, 24, 9, 0, 15, 29, 10, 9, 24, 11, 18, 4, 15, 10, 4, 24, 16, 12, 7, 17, 24, 15, 11, 19, 20, 27, 17, 5, 9, 14, -1, 30, 15, 21, 14, 17, 2, 28, 25, 27, 8, 19, 24, 11 ],
        [ 19, 26, 18, 16, 0, 17, 16, 26, 2, 19, 1, 15, 13, 10, -1, 14, 3, 19, 30, 5, 8, 21, 19, 29, 0, 15, 0, 0, 0, 6, 1, 19, 25, 7, 0, 15, 8, 20, 6, 16, 21, 6, 4, 6, 30, 19, 19, 16, 15, 19 ],
        [ 7, 29, 13, 20, 6, 25, 27, 11, 30, 29, 9, 23, 4, 0, 26, 18, 20, 19, 2, 4, 8, 24, 29, 0, 19, 15, 15, 21, 24, 11, 2, -1, 7, 19, 1, 29, 27, 17, -1, 3, 8, 19, 17, 14, 18, 18, 25, 21, 25, 11 ],
        [ 2, 28, 6, 19, 0, 11, 28, 3, 11, 0, 23, 26, 6, 26, 12, 6, 24, 2, -1, 2, 19, 29, 3, 3, 21, 3, 8, 13, 7, 8, 29, 5, 3, 13, 7, 7, 9, 10, 3, 13, 3, 27, 9, 2, 13, 6, 22, 27, 1, 21 ],
        [ 16, 12, 3, 5, 1, 2, 24, 14, 29, 21, 10, 8, 5, 0, 17, 21, 8, 1, 12, 16, 19, 16, 30, 24, 28, 21, 25, 29, 25, 9, 8, 9, 16, 29, 9, 6, 30, 4, 19, 29, 21, 24, 19, 15, 15, 14, 12, 18, 29, 9 ],
        [ 25, 12, 30, 23, 24, 7, 11, 4, 11, 21, 29, 18, 20, 7, 1, 5, 28, 9, 13, 3, 12, 0, 16, 18, 6, 29, 9, 4, 22, 6, 19, -1, 19, 7, -1, 21, 3, 17, 27, 0, 17, 30, 23, 25, 17, 7, 2, -1, 8, 3 ],
        [ 5, 20, 3, 10, 13, 1, 10, 10, 5, 1, 30, 1, 5, 12, 1, 5, 13, 14, 11, 23, 25, 26, 17, 7, 22, 18, 3, 20, 1, 4, 4, 22, 19, 4, 21, 2, 0, 7, 4, 6, 0, 30, 18, 6, 11, 2, 29, 13, 7, 6 ],
        [ 17, 30, 17, 14, 24, 19, 19, 14, 3, 26, 22, 26, 6, 26, 19, 24, 16, 28, 3, 11, 14, 2, 30, 9, 3, 19, 16, 0, -1, 9, 5, 7, 1, 25, 15, -1, 14, -1, 11, 29, 25, 15, 3, 17, 0, 3, 3, 21, 30, 22 ],
        [ 1, 23, 21, 20, 25, 5, 6, 30, 4, 3, 5, 6, 29, 2, 7, 12, 11, 21, 7, -1, 28, 9, 1, 9, 11, 28, 21, 6, 3, 25, 5, 13, 26, 12, 5, 4, 17, 25, 29, 20, 18, 1, 21, 25, 25, 12, 12, 18, 30, 8 ],
        [ 7, 30, 6, 26, 28, 8, 14, 12, 7, 17, 18, 15, 19, 3, 30, 10, 18, 26, 9, 6, 18, 14, 18, 2, 3, 17, 26, 3, 28, 0, 15, 21, 8, 9, 26, 23, 20, 14, 10, 19, 0, 8, -1, 2, 5, -1, 23, 29, 4, 2 ],
        [ 0, 10, 1, 23, 2, 23, 23, 16, 29, 8, 5, 26, 17, 29, 3, 6, 14, 24, 17, 22, 23, -1, 16, 0, 2, 28, 10, 8, 30, 4, 9, 2, 4, 24, 22, -1, 4, 19, 24, 21, 16, 19, 13, 15, 6, 24, 29, 0, 16, 17 ],
        [ 12, 23, 30, 6, 21, 4, 14, 22, 8, 8, 15, 1, 4, 30, 27, 20, 23, 3, 7, 12, 30, 12, 10, 25, 13, 6, 15, 21, 10, 27, 8, 2, 19, 20, 20, 15, 5, 11, 30, 24, 20, 24, 30, 4, 28, 20, 23, 20, 10, 15 ],
        [ 5, 20, 27, 15, 8, 23, 23, 11, 27, 20, 28, 14, 3, 14, 15, 22, 7, 27, 23, 27, 25, 6, 20, 11, 27, 10, 18, 2, 7, 23, 1, 11, 1, 11, 16, -1, 1, 28, 26, 24, 9, 21, 23, 6, -1, 30, 10, 23, 15, 0 ],
        [ 9, 26, 5, 29, 22, 0, 27, 30, 2, 9, 20, 15, 5, 21, 13, 20, 4, 19, 13, 24, 10, 24, -1, 21, -1, 28, 13, 3, 21, 12, -1, 22, 18, 7, 30, 29, 18, 19, 4, 26, 30, 11, 21, 18, 21, 16, 13, 9, 13, 26 ],
        [ 7, 20, 17, 10, 10, 0, 3, 4, 11, 16, -1, 20, 17, 23, 8, 1, 22, 28, 23, 20, 9, 26, -1, 13, -1, 10, 25, 25, 13, 2, 13, 22, 22, 24, 9, 10, 19, 20, 21, 26, 14, 6, 27, 13, 22, 2, 10, 14, 14, 4 ],
        [ 19, 9, 17, -1, 16, 24, 13, 27, 17, 27, 7, 12, 15, 2, 24, 11, 20, 5, 8, 13, 4, 23, 19, 24, 16, 15, 9, 25, 19, 5, 12, 16, 18, 3, 21, 15, 29, 3, 1, 17, 25, 4, 16, 13, 23, 15, 1, 22, 29, 28 ],
        [ 19, 11, 17, 8, 12, 18, 7, 15, 23, 2, 13, 5, 1, 22, 4, 5, 26, 9, 25, -1, 23, 14, 26, 20, -1, 9, 28, 10, 20, 6, 26, 18, 1, 5, 21, 4, 20, 1, 18, 7, 21, 10, 8, 25, 6, 24, -1, 12, 19, 12 ],
        [ 16, 5, 7, 0, 30, 4, 21, 8, 15, 0, 9, 3, 24, 25, 12, 18, 23, 8, 15, 29, 7, 25, 14, 9, 27, 1, 20, 19, 2, 4, 2, 14, 5, 20, 5, 19, 11, 14, 10, -1, 24, 13, 21, 8, 24, 8, 10, -1, 4, 13 ],
        [ 2, 26, 5, 1, 10, 19, 0, 6, 29, 11, 17, 28, 19, 3, 5, 27, 21, 18, 17, 17, 14, -1, 17, 14, 16, 29, 24, 28, 9, 18, 22, -1, 7, 15, 29, 9, 7, 9, 7, 8, 23, 18, 23, 23, 20, 19, 23, 10, 25, 23 ],
        [ 22, 9, 11, 3, -1, 13, 3, 25, 6, 9, 29, 2, 23, 1, 28, 28, 17, 29, 6, 7, 2, 6, 6, 21, 10, 30, 27, 12, 30, 25, 2, 17, 11, 7, 3, 29, 5, 29, 0, 15, 1, 19, 20, 9, 7, 17, 19, 26, 11, 2 ]
    ];
$s = 0;

/*
$g =
[[-1,3,2],
    [2,-1,0],
    [-1,0,-1]];
$s = 0;

$g = [
    [-1, 0, -1, 10, -1, -1],
    [-1, -1, 0, -1, -1, 5],
    [-1, -1, -1, -1, 1, 100],
    [-1, -1, -1, -1, -1, -1],
    [-1, -1, -1, -1, -1, 1],
    [-1, -1, -1, 2, -1, -1],
];
$s = 0;
*/

graphDistances($g, $s);

$distQ = null;
$visited = null;

class DistNode {
    public $min;
    public $fromList;
}

function graphDistances($g, $s) {
    global $distQ, $visited;
    $distQ = [];
    $visited = array_fill(0, count($g[0]), 0);

    foreach($g as $n => &$row) {
        $row[$n] = -1;
        asort($row);
    }
    $start = $g[$s];

    foreach ($start as $f => &$value) {
        $value = ($f == $s) ? 0 : findShortest($g, $s, $f, -1);
    }
    ksort($start);

    return $start;
}

function findShortest($g, $s, $f, $prev) {
    global $distQ, $visited;
    $distmin = PHP_INT_MAX;
    $key = "$s:$f";
    if (isset($distQ[$key])) {
        if (isset($distQ[$key]->fromList[$prev])) {
            return $distQ[$key]->min;
        }
        $distmin = $distQ[$key]->min;
    }
    $visited[$s] = 1;

    $value = $g[$s][$f];
    if ($value < 0) {
        $value = PHP_INT_MAX;
    }
    $value = min($distmin, $value);
    $row = $g[$s];
    foreach ($row as $n => $v) {
        if ($visited[$n] || $v == -1) {
            continue;
        }

        if ($v < $value) {
            $value = min($value, $v + findShortest($g, $n, $f, $s));
        }
    }
    $visited[$s] = 0;
    if (!isset($distQ[$key])) {
        $distQ[$key] = new DistNode();
    }
    $distQ[$key]->fromList[$prev] = 1;
    return $distQ[$key]->min = min($value, $distmin);
}

